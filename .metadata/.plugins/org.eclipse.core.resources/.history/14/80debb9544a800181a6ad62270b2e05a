package com.extract;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

import org.apache.poi.EncryptedDocumentException;
import org.apache.poi.openxml4j.exceptions.InvalidFormatException;
import org.apache.poi.ss.usermodel.RichTextString;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.ss.usermodel.WorkbookFactory;
import org.openqa.selenium.By;
import org.openqa.selenium.NoSuchElementException;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;

public class ScoreCardElements {
	WebDriver driver;
	By teamnames = By.xpath("//a[@class='app_partial']/span[1]"); 	
	By batsmenelements = By.xpath("//div[@class='col-b']//div[@class='flex-row']/div[@class='wrap batsmen']");
	int i = 0, j = 0;
	String[] headerBattingArray = {"Runs","Balls","4's","6's","StrikeRate"};
	String[] headerBattingExcel = {"Batsman","WickeInfo","Runs","Balls","4's","6's","StrikeRate"};
	public ScoreCardElements(WebDriver driver)
	{
		this.driver = driver;		
	}
	
	public HashMap<String , String> getTeams(String outputfilename){
		List<WebElement> teamlist = driver.findElements(teamnames);
		HashMap<String , String>  teammap = new HashMap<String,String>();
		 i = 0;
		teamlist.forEach(team->{			
			if(!team.getText().equals("")){
				System.out.println("Playing Teams : " + team.getText());
				// create a workbook and header for teh teams
				Workbook workbook = null;
				try {
					 workbook = WorkbookFactory.create(new FileInputStream(outputfilename));
				} catch (Exception e) {					
					e.printStackTrace();
				}
				String sheetName = team.getText().split(" ")[0] + "-Batting";
				System.out.println(sheetName);
				Sheet sh = workbook.createSheet(sheetName);
				//Create a header row
				creatHeader(headerBattingExcel,  sh);
				teammap.put("Team " + i, team.getText());
				getBatsmenDetails(team.getText(), sheetName , workbook);
				try{
					FileOutputStream opFile = new FileOutputStream(outputfilename);
					workbook.write(opFile);
					opFile.close();
				}
				catch(Exception e){
					System.out.println("Issue in Creating output");
					e.printStackTrace();
				}
			}
			i++;
		});
		return teammap;
	}
	
	public void getBatsmenDetails(String teamName,String sheetName , Workbook workbook){
		HashMap<String,String> excelDataMap = new HashMap<String,String>();
		List<WebElement> batsmenlist = driver.findElements(batsmenelements);
		Sheet sheet = workbook.getSheet(sheetName);
		batsmenlist.forEach(batsmen->{
			excelDataMap.clear();
			System.out.println("Last Row :" + sheet.getLastRowNum());
			Row dataRow = sheet.createRow(sheet.getLastRowNum()+1);
			System.out.println("Writing in : " +dataRow.getRowNum());
			excelDataMap.put("TeamName", teamName);
			WebElement eachBatsmen = batsmen.findElement(By.xpath("div[@class='cell batsmen']/a"));
			WebElement wicketInfo;
			excelDataMap.put("Batsman", eachBatsmen.getText());
			ArrayList<String> wicketinfo = new ArrayList<String>();
			ArrayList<String> data = new ArrayList<String>();
			// to get the wicket info
			try{
				String wicket = "";
				wicketInfo= batsmen.findElement(By.xpath("div[@class='cell commentary']"));				
				if(wicketInfo.getText().equals(""))
				{
					wicketInfo= batsmen.findElement(By.xpath("div[@class='cell commentary']/a"));	
					wicket = wicketInfo.getText();
				}
				else
				{
					wicketinfo.add(wicketInfo.getText());
					wicket = wicketInfo.getText();
				}
				excelDataMap.put("WicketInfo", wicket);
			}
			catch(NoSuchElementException e)
			{
				e.printStackTrace();
				excelDataMap.put("WicketInfo", "");
			}
			// to get batsmen playing info
			List<WebElement> batsmenStats = batsmen.findElements(By.xpath("div[@class='cell runs']"));			

			 j = 0;
			batsmenStats.forEach(stats->{				
				data.add(stats.getText());
				excelDataMap.put(headerBattingArray[j], stats.getText());
				j++;
			});			
			String teamname = eachBatsmen.findElement(By.xpath("ancestor::li[@class='accordion-item']/div[1]/a")).getText();
			writeData(excelDataMap, sheet,  dataRow);
			if(teamname.contains(teamName))
			{
			System.out.println(excelDataMap);
			}
		});		
	}
	
	public void creatHeader(String[] headerArray, Sheet sh)
	{
		Row row = sh.createRow(0);
		for(int k = 0; k < headerArray.length; k++)
		{
			row.createCell(k).setCellValue(headerBattingExcel[k]);
		}
				
	}
	
	//function to write the value to the excel
	public void writeData(HashMap<String,String> excelMap, Sheet sh, Row dataRow)
	{
		int lastCell = sh.getRow(0).getLastCellNum();
		for(int a = 0 ; a < lastCell; a++)
		{
			RichTextString cellval = sh.getRow(0).getCell(a).getRichStringCellValue();
			dataRow.createCell(a).setCellValue(cellval);
		}
	}
}
