package hashCodePract;

public class Offers implements Comparable<Offers>{
	private String name;
	private int offerId;
	private int price;

	public Offers() {

	}

	public Offers(String name, int offerId, int price) {

		this.name = name;
		this.offerId = offerId;
		this.price = price;
	}

	public String getName() {
		return name;
	}

	@Override
	public String toString() {
		return "Offers [name=" + name + ", offerId=" + offerId + ", price=" + price + "]";
	}

	public void setName(String name) {
		this.name = name;
	}

	public int getOfferId() {
		return offerId;
	}

	public void setOfferId(int offerId) {
		this.offerId = offerId;
	}

	public int getPrice() {
		return price;
	}

	public void setPrice(int price) {
		this.price = price;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((name == null) ? 0 : name.hashCode());
		result = prime * result + offerId;
		result = prime * result + price;
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Offers other = (Offers) obj;
		if (name == null) {
			if (other.name != null)
				return false;
		} else if (!name.equals(other.name))
			return false;
		if (offerId != other.offerId)
			return false;
		if (price != other.price)
			return false;
		return true;
	}

	@Override
	public int compareTo(Offers o) {
		// TODO Auto-generated method stub
		if(this.price > o.price)
			return 1;
		else if(this.price < o.price)
			return -1;
		else
			return 0;
			
	}
}
